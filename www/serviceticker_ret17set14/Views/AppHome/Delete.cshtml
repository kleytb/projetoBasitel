@model MzServiceTicker.DataViewModels.TicketViewModel

<div class="row">

    <table class="table table-striped table-hover">
        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code"))
            </td>
            <td>
                @Html.DisplayFor(model => model.Code)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.UserId"))
            </td>
            <td>
                @Html.DisplayFor(model => model.Username)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ContractCode"))
            </td>
            <td>
                @Html.DisplayFor(model => model.ContractCode)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Priority"))
            </td>
            <td>
                @Html.DisplayFor(model => model.Priority)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.CustomerBranch"))
            </td>
            <td>
                @Html.DisplayFor(model => model.CustomerBranch)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.CustomerBranchName"))
            </td>
            <td>
                @Html.DisplayFor(model => model.CustomerBranchName)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketDescription"))
            </td>
            <td>
                @Html.DisplayFor(model => model.TicketDescription)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketOpenDateTime"))
            </td>
            <td>
                @Html.DisplayFor(model => model.TicketOpenDateTime)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketDueDateTime"))
            </td>
            <td>
                @Html.DisplayFor(model => model.TicketDueDateTime)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketComments"))
            </td>
            <td>
                @Html.DisplayFor(model => model.TicketComments)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Status"))
            </td>
            <td>
                @Html.DisplayFor(model => model.Status)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ServiceStartDateTime"))
            </td>
            <td>
                @Html.DisplayFor(model => model.ServiceStartDateTime)
            </td>
        </tr>

        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ServiceComments"))
            </td>
            <td>
                @Html.DisplayFor(model => model.ServiceComments)
            </td>
        </tr>

        <tr>
            <td class="col-md-5"></td>
            <td></td>
        </tr>
    </table>

    <p>@Html.DisplayFor(model => model.TrackingString)</p>


    <br />

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div style="color: red">@Html.ValidationSummary()</div>
        
        @Html.ActionLink(MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Return"), "Index", null, new { @class = "btn btn-primary" })
        <input type='submit' value='@MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.ConfirmDelete")' class='btn btn-danger' />
    }

    <br />
    <br />
</div>







