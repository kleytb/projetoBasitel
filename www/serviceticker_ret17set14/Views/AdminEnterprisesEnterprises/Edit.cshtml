@model MzServiceTicker.DataViewModels.EnterpriseViewModel

<div class="row">

    <table class="table table-striped table-hover">
        <tr>
            <td>
                @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Enterprise.EIN"))
            </td>
            <td>
                @Html.DisplayFor(model => model.EIN)
            </td>
        </tr>

        <tr>
            <td class="col-md-2"></td>
            <td></td>
        </tr>
    </table>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form" }))
    {
        @Html.AntiForgeryToken()
        <div style="color: red">@Html.ValidationSummary()</div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Enterprise.Name"))
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Enterprise.Name.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.Name, null, new { @style = "color: red" })
        </div>


        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Enterprise.Description"))
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Enterprise.Description.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.Description, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.CheckBoxFor(model => model.Enabled, new { @class = "checkbox-inline" })
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Enterprise.Enabled"))
            @Html.ValidationMessageFor(model => model.Enabled, null, new { @style = "color: red" })
        </div>

        <br />

        <p>@Model.TrackingString</p>

        <br />

        @Html.HiddenFor(model => model.EIN)

                
        @Html.ActionLink(MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Return"), "Index", null, new { @class = "btn btn-primary" })
        <input type='submit' value='@MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Save")' class='btn btn-primary' />
    }
</div>







