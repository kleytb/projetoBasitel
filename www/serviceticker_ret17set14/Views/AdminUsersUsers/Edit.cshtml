@model MzServiceTicker.DataViewModels.UserViewModel

<div class="col-md-12">

    <table class="table table-striped table-hover">
        <tr>
            <td>
                @Html.Label(MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.Username"))
            </td>
            <td>
                @Html.DisplayFor(model => model.Username)
            </td>
        </tr>

        <tr>
            <td class="col-md-2"></td>
            <td></td>
        </tr>
    </table>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form" }))
    {
        @Html.AntiForgeryToken()
        <div style="color: red">@Html.ValidationSummary()</div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.Name"))
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.Name.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.Name, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.Description"))
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.Description.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.Description, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.Email"))
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.Email.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.Email, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.PhoneNumber1"))
            @Html.TextBoxFor(model => model.PhoneNumber1, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.PhoneNumber1.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.PhoneNumber1, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.PhoneNumber2"))
            @Html.TextBoxFor(model => model.PhoneNumber2, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.PhoneNumber2.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.PhoneNumber2, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.CheckBoxFor(model => model.IsAdmin, new { @class = "checkbox-inline" })
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.IsAdmin"))
            @Html.ValidationMessageFor(model => model.IsAdmin, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.CheckBoxFor(model => model.IsTicketAdmin, new { @class = "checkbox-inline" })
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.IsTicketAdmin"))
            @Html.ValidationMessageFor(model => model.IsTicketAdmin, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.CheckBoxFor(model => model.IsTicketWorker, new { @class = "checkbox-inline" })
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.IsTicketWorker"))
            @Html.ValidationMessageFor(model => model.IsTicketWorker, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.CheckBoxFor(model => model.Enabled, new { @class = "checkbox-inline" })
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.User.Enabled"))
            @Html.ValidationMessageFor(model => model.Enabled, null, new { @style = "color: red" })
        </div>

        
        @Html.HiddenFor(model => model.Username)
        @Html.HiddenFor(model => model.EnterpriseId)


        <br />

        <p>@Model.TrackingString</p>

        <br />


        @Html.ActionLink(MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Return"), "Index", new { idSelectedEnterprise = Model.EnterpriseId }, new { @class = "btn btn-primary" })
        <input type='submit' value='@MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Save")' class='btn btn-primary' />
    }

    <br />
</div>
