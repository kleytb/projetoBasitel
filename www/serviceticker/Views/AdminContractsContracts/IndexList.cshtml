@model IEnumerable<MzServiceTicker.DataViewModels.ContractViewModel>

<div class="row">

    @if (Model.Count() == 0)
    {
        <p>@MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.NoData")</p>
    }
    else
    {
        WebGrid grid = new WebGrid(source: Model, rowsPerPage: 25, canPage: true, canSort: true, defaultSort: "Name");
    
        @grid.Pager(mode: WebGridPagerModes.All)

        @grid.GetHtml(tableStyle: "table table-striped table-bordered table-hover table-condensed",
                                    selectedRowStyle: "gridSelRow", rowStyle: "gridRow",
        columns: grid.Columns(
            grid.Column("Name", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Contract.Name"), canSort: true),
            grid.Column("Description", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Contract.Description"), canSort: true),
            grid.Column("Code", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Contract.Code"), canSort: true),
            grid.Column(null, @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Action"), format: (item) => new HtmlString(
                                                            Html.ActionLink(" ", "Details", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-list", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Detail") }).ToString() +
                                                            "&nbsp &nbsp" +
                                                            Html.ActionLink(" ", "Edit", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-edit", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Edit") }).ToString() +
                                                            "&nbsp &nbsp" +
                                                            Html.ActionLink(" ", "Delete", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-remove", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Delete") }).ToString())
        )))
    }
</div>



