@model MzServiceTicker.DataViewModels.TicketFilterSelectorViewModel

<link href="@Url.Content("~/Content/css/bootstrap-datetimepicker.css")" rel="stylesheet" media="all">

<script type="text/javascript" charset="UTF-8" src="@Url.Content("~/Content/script/moment-with-langs.min.js")"></script>
<script type="text/javascript" charset="UTF-8" src="@Url.Content("~/Content/script/bootstrap-datetimepicker.min.js")"></script>

<!-- Button trigger modal -->
<div class="row">
    <div class="form-group pull-right">
        @if (MzServiceTicker.Infrastructure.Session.SessionControl.IsTicketAdminSession())
        {
            @Html.ActionLink("Criar OS", "Create", new { }, new { @class = "btn btn-primary btn-sm" })
        }

        <button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal">Fitros Busca</button>
        @Html.ActionLink("Limpar Filtros", "Index", new { }, new { @class = "btn btn-primary btn-sm" })
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("Index", "AppHome", FormMethod.Post, new { @class = "form" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">Modal title</h4>
                </div>
                <div class="modal-body">

                    <div class="col-md-12">
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Contracts"))</label>
                                @Html.DropDownListFor(model => model.filterContractId, Model.Contracts, new { id = "ContractDropDownList", @class = "form-control" })
                            </div>

                            <div class="form-group col-md-6">
                                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Users"))</label>
                                @Html.DropDownListFor(model => model.filterUserId, Model.Users, new { id = "UserDropDownList", @class = "form-control" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>@Html.Label("Ordem de Serviço")</label>
                                @Html.TextBoxFor(model => model.filterCode, new { @class = "form-control", placeholder = "OS a filtrar...", type = "text" })
                            </div>

                            <div class="form-group col-md-6">
                                <label>@Html.Label("Prioridade da OS", new { @title= "0: 6Hs, 1: 12Hs, 2:5 Dias" } )</label>
                                @Html.TextBoxFor(model => model.filterPriority, new { @class = "form-control", placeholder = "Prioridade a filtrar...", type = "text" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>@Html.Label("Prefixo da Agência")</label>
                                @Html.TextBoxFor(model => model.filterCustomerBranch, new { @class = "form-control", placeholder = "Prefixo a filtrar...", type = "text" })
                            </div>

                            <div class="form-group col-md-6">
                                <label>@Html.Label("Status")</label>
                                @Html.DropDownListFor(model => model.filterStatusId, Model.Statuses, new { id = "UserDropDownList", @class = "form-control" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>@Html.Label("Data Inicial")</label>
                                @Html.EditorFor(model => model.filterStartDate)
                            </div>

                            <div class="form-group col-md-6">
                                <label>@Html.Label("Data Final")</label>
                                @Html.EditorFor(model => model.filterEndDate)
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Retornar</button>
                    <input type="submit" value="Filtrar" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>
</div>

@Html.Action("IndexList", "AppHome")



@{
    
    /*

@model MzServiceTicker.DataViewModels.TicketFilterSelectorViewModel


<div class="col-md-12">
    <div class="well">
        @using (Html.BeginForm("Index", "AppHome", FormMethod.Post, new { @class = "form-inline" }))
        {
            <div class="row"></div>
            <div class="form-group col-md-2">
                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Contracts"))</label>
                @Html.DropDownListFor(model => model.filterContractId, Model.Contracts, new { id = "ContractDropDownList", @class = "form-control input-sm" })
            </div>
        
            <div class="form-group col-md-2">
                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Users"))</label>
                @Html.DropDownListFor(model => model.filterUserId, Model.Users, new { id = "UserDropDownList", @class = "form-control input-sm" })
            </div>

            <div class="form-group col-md-2">
                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code"))</label>
                @Html.TextBoxFor(model => model.filterCode, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code.Placeholder"), type = "text" })
            </div>

            <div class="form-group col-md-2">
                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code"))</label>
                @Html.EditorFor(model => model.filterStartDate)
            </div>

            <div class="form-group col-md-2">
                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code"))</label>
                @Html.EditorFor(model => model.filterEndDate)
            </div>

            <div class="form-group col-md-2">
                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code"))</label>
                @Html.TextBoxFor(model => model.filterPriority, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code.Placeholder"), type = "text" })
            </div>
             
            <div class="form-group col-md-2">
                <label>@Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code"))</label>
                @Html.TextBoxFor(model => model.filterCustomerBranch, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code.Placeholder"), type = "text" })
            </div>
                
            <input type="submit" value="Filtrar" class="btn btn-primary btn-xs" />

            <br />
            <br />
        }

        <div class="col-md-1">
            @if (MzServiceTicker.Infrastructure.Session.SessionControl.IsTicketAdminSession())
            {
                @Html.ActionLink("Criar OS", "Create", new { }, new { @class = "btn btn-primary btn-xs pull-right" })
            }
        </div>


    </div>

@Html.Action("IndexList", "AppHome")

</div>
 * 
 */
}
