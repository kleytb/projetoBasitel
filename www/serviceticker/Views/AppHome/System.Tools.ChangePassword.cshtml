@model MzServiceTicker.ViewModels.AppHomeViewModel

<ol class="breadcrumb">
    <li>blablabla</li>
    <li>@Model.ScreenName</li>
    <li>Alterar Senha</li>
</ol>

<h1><small>@Model.ScreenTitle</small></h1>

<div class="col-md-8">

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.Password)
            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", placeholder = "Entre com a senha atual...", type = "password" })
            <p>@Html.ValidationMessageFor(model => model.Password, null, new { @style = "color: red" }) &nbsp</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword)
            @Html.TextBoxFor(model => model.NewPassword, new { @class = "form-control", placeholder = "Entre com a nova senha...", type = "password" })
            <p>@Html.ValidationMessageFor(model => model.NewPassword, null, new { @style = "color: red" }) &nbsp</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPasswordConfirmation)
            @Html.TextBoxFor(model => model.NewPasswordConfirmation, new { @class = "form-control", placeholder = "Confirme a nova senha...", type = "password" })
            <p>@Html.ValidationMessageFor(model => model.NewPasswordConfirmation, null, new { @style = "color: red" }) &nbsp</p>
        </div>


        <div style="color: red">@Html.ValidationSummary()</div>

        <input type="submit" value="Alterar" class="btn btn-primary" />

    }

</div>
