@model IEnumerable<MzServiceTicker.DataViewModels.TicketViewModel>

<div class="row">
    @if (Model.Count() == 0)
    {
        <p>@MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.NoData")</p>
    }
    else
    {
        WebGrid grid = new WebGrid(source: Model, rowsPerPage: 25, canPage: true, canSort: true, defaultSort: "Name");
    
        @grid.Pager(mode: WebGridPagerModes.All)

        @grid.GetHtml(tableStyle: "table table-striped table-bordered table-hover table-condensed",
                                    selectedRowStyle: "gridSelRow", rowStyle: "gridRow",
        columns: grid.Columns(

            grid.Column("TicketOpenDateTime", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketOpenDateTime"), (item) => String.Format("{0:dd/MM/yyyy HH:mm}", item.TicketOpenDateTime), canSort: true),
            grid.Column("ContractId", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ContractCode"), canSort: true),
            grid.Column("Priority", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Priority"), canSort: true),
            grid.Column("Code", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code"), canSort: true),
            grid.Column("CustomerBranch", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.CustomerBranch"), canSort: true),
            grid.Column("CustomerBranchName", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.CustomerBranchName"), canSort: true),
            grid.Column("Status", @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Status"), canSort: true),
            grid.Column(null, @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Action"),
                                format: (item) =>
                                    {
                                        if (MzServiceTicker.Infrastructure.Session.SessionControl.IsTicketAdminSession())
                                            return new HtmlString(Html.ActionLink(" ", "Details", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-list", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Detail") }).ToString() +
                                                            "&nbsp &nbsp" +
                                                            Html.ActionLink(" ", "Edit", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-edit", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Edit") }).ToString() +
                                                            "&nbsp &nbsp" +
                                                            Html.ActionLink(" ", "Delete", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-remove", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Delete") }).ToString());
                                        else if (MzServiceTicker.Infrastructure.Session.SessionControl.IsTicketWorkerSession())
                                            return new HtmlString(Html.ActionLink(" ", "Details", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-list", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Detail") }).ToString() +
                                                            "&nbsp &nbsp" +
                                                            Html.ActionLink(" ", "Edit", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-edit", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Edit") }).ToString());
                                        else
                                            return new HtmlString(Html.ActionLink(" ", "Details", Model.FirstOrDefault(record => record.Id == item.Id), new { @class = "glyphicon glyphicon-list", title = @MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Detail") }).ToString());
                                    }
        )))
    }
</div>


