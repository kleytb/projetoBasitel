@model MzServiceTicker.DataViewModels.TicketViewModel

<link href="@Url.Content("~/Content/css/bootstrap-datetimepicker.css")" rel="stylesheet" media="all">

<script type="text/javascript" charset="UTF-8" src="@Url.Content("~/Content/script/moment-with-langs.min.js")"></script>
<script type="text/javascript" charset="UTF-8" src="@Url.Content("~/Content/script/bootstrap-datetimepicker.min.js")"></script>

<div class="row col-md-12">

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div style="color: red">@Html.ValidationSummary()</div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code"))
            @Html.TextBoxFor(model => model.Code, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Code.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.Code, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.UserId"))
            @Html.DropDownListFor(model => model.UserId, Model.Users, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserId, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ContractCode"))
            @Html.DropDownListFor(model => model.ContractId, Model.Contracts, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContractId, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.CustomerBranch"))
            @Html.TextBoxFor(model => model.CustomerBranch, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.CustomerBranch.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.CustomerBranch, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.CustomerBranchName"))
            @Html.TextBoxFor(model => model.CustomerBranchName, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.CustomerBranchName.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.CustomerBranchName, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketDescription"))
            @Html.TextBoxFor(model => model.TicketDescription, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketDescription.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.TicketDescription, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Priority"))
            @Html.TextBoxFor(model => model.Priority, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Priority.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.Priority, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketComments"))
            @Html.TextAreaFor(model => model.TicketComments, new { @class = "form-control", rows="10", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketComments.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.TicketComments, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketOpenDateTime"))
            @Html.EditorFor(model => model.TicketOpenDateTime)
            @Html.ValidationMessageFor(model => model.TicketOpenDateTime, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketDueDateTime"))
            @Html.EditorFor(model => model.TicketDueDateTime, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.TicketDueDateTime.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.TicketDueDateTime, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ServiceStartDateTime"))
            @Html.EditorFor(model => model.ServiceStartDateTime, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ServiceStartDateTime.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.ServiceStartDateTime, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ServiceEndDateTime"))
            @Html.EditorFor(model => model.ServiceEndDateTime, new { @class = "form-control", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ServiceEndDateTime.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.ServiceEndDateTime, null, new { @style = "color: red" })
        </div>
        
        <div class="form-group">
            <strong>
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.Status"))
            </strong>
            @Html.DropDownListFor(model => model.Status, new SelectList(Enum.GetValues(typeof(MzServiceTickerModel.Ticket.StatusType))), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, null, new { @style = "color: red" })
        </div>

        <div class="form-group">
            @Html.Label(@MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ServiceComments"))
            @Html.TextAreaFor(model => model.ServiceComments, new { @class = "form-control", rows="10", placeholder = @MzCommon.MessageHandler.MessageGetter.GetMessage("Object.Ticket.ServiceComments.Placeholder"), type = "text" })
            @Html.ValidationMessageFor(model => model.ServiceComments, null, new { @style = "color: red" })
        </div>
        
        @Html.HiddenFor(model => model.ContractId)

        @Html.ActionLink(@MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Return"), "Index", null, new { @class = "btn btn-primary" })
        <input type='submit' value='@MzCommon.MessageHandler.MessageGetter.GetMessage("Screen.Save")' class='btn btn-primary' />
    }

    <br />
</div>

